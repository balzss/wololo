{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","audio","Audio","useState","isPlaying","setIsPlaying","showRed","setShowRed","playSound","play","className","src","alt","onClick","setTimeout","animationDuration","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA4DeA,MAvDf,WACE,IAAMC,EAAQ,IAAIC,MAAM,qBACxB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,WACZJ,GACJH,EAAMQ,QAGR,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKC,IAAI,gBAAgBC,IAAI,OAE/B,qBAAKF,UAAU,gBAAf,SACGJ,EACC,qBACEO,QAAS,WACPL,IACAH,GAAa,GACbS,YAAW,WACTT,GAAa,GACbE,GAAW,KAzBD,OAmBhB,SAUGH,EACC,qBAAKO,IAAI,0BAA0BD,UAAU,WAAWE,IAAI,SAE5D,qBAAKD,IAAI,iBAAiBD,UAAU,WAAWE,IAAI,WAIvD,qBAAKC,QAAS,WACZL,IACAH,GAAa,GACbS,YAAW,WACTT,GAAa,GACbE,GAAW,KACVQ,OANL,SASGX,EACC,qBAAKO,IAAI,0BAA0BD,UAAU,WAAWE,IAAI,SAE5D,qBAAKD,IAAI,kBAAkBD,UAAU,WAAWE,IAAI,iBCvCnDI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.631f3b21.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nconst animationDuration = 2650;\n\nfunction App() {\n  const audio = new Audio(\"/wololo-sound.mp3\")\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [showRed, setShowRed] = useState(false);\n\n  const playSound = () => {\n    if (isPlaying) return;\n    audio.play();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"bg-img\">\n        <img src=\"/aoe1-bg.jpeg\" alt=\"\" />\n      </div>\n      <div className=\"gif-container\">\n        {showRed ? (\n          <div\n            onClick={() => {\n              playSound();\n              setIsPlaying(true);\n              setTimeout(() => {\n                setIsPlaying(false);\n                setShowRed(false);\n              }, animationDuration);\n            }}\n          >\n            {isPlaying ? (\n              <img src=\"/wololo-red-to-blue.gif\" className=\"App-logo\" alt=\"logo\" />\n            ) : (\n              <img src=\"/red-still.gif\" className=\"App-logo\" alt=\"logo\" />\n            )}\n          </div>\n        ) : (\n          <div onClick={() => {\n            playSound();\n            setIsPlaying(true);\n            setTimeout(() => {\n              setIsPlaying(false);\n              setShowRed(true);\n            }, animationDuration - 100);\n          }}\n          >\n            {isPlaying ? (\n              <img src=\"/wololo-blue-to-red.gif\" className=\"App-logo\" alt=\"logo\" />\n            ) : (\n              <img src=\"/blue-still.gif\" className=\"App-logo\" alt=\"logo\" />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}